const express = require("express");
const pool = require("../config/db");
const router = express.Router();

// Middleware for checking if the user is logged in
const isLoggedIn = (req, res, next) => {
  if (req.session.user) {
    return next();
  } else {
    return res.status(401).send("Unauthorized");
  }
};

// Middleware for checking if the user is an admin
const isAdmin = (req, res, next) => {
  if (req.session.user && req.session.user.rolle === "admin") {
    return next();
  } else {
    return res.status(403).send("Forbidden: Only admin can access this route");
  }
};

// Login route
router.post("/login", async (req, res) => {
  console.log("Request body:", req.body); // Log the request body
  const { navn, passord } = req.body;

  // Validate request body
  if (!navn || !passord) {
    return res.status(400).send("Username and password are required");
  }

  try {
    console.log("Querying database for user:", navn); // Log the username
    const [user] = await pool.query(
      "SELECT * FROM mydb.medlem WHERE navn = ?",
      [navn]
    );
    console.log("Database result:", user); // Log the database result

    if (user.length === 0) {
      console.log("User not found"); // Log if user is not found
      return res.status(404).send("User not found");
    }

    if (user[0].passord !== passord) {
      console.log("Invalid password"); // Log if password is invalid
      return res.status(400).send("Invalid password");
    }

    // Set user info in session
    req.session.user = {
      medlem_id: user[0].medlem_id,
      navn: user[0].navn,
      rolle: user[0].rolle,
    };

    console.log("Session after login:", req.session);

    console.log("Login successful"); // Log successful login
    return res.status(200).send("Login successful");
  } catch (error) {
    console.error("Login error:", error); // Log the error
    return res.status(500).send("Internal server error");
  }
});

// Get current user info
router.get("/me", isLoggedIn, async (req, res) => {
  try {
    const { medlem_id } = req.session.user;
    const [result] = await pool.query(
      `
          SELECT M.medlem_id, M.navn, A.adresse, A.postnummer, 
                 Mo.registreringsnummer, Mo.mc_type, Mo.produsent
          FROM Medlem M
          JOIN Adresse A ON M.adresse_id = A.adresse_id
          LEFT JOIN Motorsykkel Mo ON M.medlem_id = Mo.medlem_id
          WHERE M.medlem_id = ?
        `,
      [medlem_id]
    );

    if (result.length === 0) return res.status(404).send("No data found");

    return res.json(result[0]);
  } catch (error) {
    console.error(error);
    return res.status(500).send("Internal server error");
  }
});

// Get all members (admin only)
router.get("/members", isAdmin, async (req, res) => {
  try {
    const [result] = await pool.query(`
        SELECT M.medlem_id, M.navn, A.adresse, A.postnummer,
               Mo.registreringsnummer, Mo.mc_type, Mo.produsent
        FROM Medlem M
        JOIN Adresse A ON M.adresse_id = A.adresse_id
        LEFT JOIN Motorsykkel Mo ON M.medlem_id = Mo.medlem_id
      `);

    if (result.length === 0) return res.status(404).send("No members found");

    return res.json(result);
  } catch (error) {
    console.error(error);
    return res.status(500).send("Internal server error");
  }
});

// Create a new user (admin only)
router.post("/create-user", isAdmin, async (req, res) => {
  const { navn, passord, rolle, adresse_id } = req.body;

  if (!["medlem", "admin"].includes(rolle)) {
    return res.status(400).send("Invalid role");
  }

  try {
    const [result] = await pool.query(
      "INSERT INTO Medlem (navn, passord, rolle, adresse_id) VALUES (?, ?, ?, ?)",
      [navn, passord, rolle, adresse_id]
    );

    return res.status(201).send("User created successfully");
  } catch (error) {
    console.error(error);
    return res.status(500).send("Internal server error");
  }
});

// Logout route
router.post("/logout", (req, res) => {
  req.session.destroy((err) => {
    if (err) {
      return res.status(500).send("Error logging out");
    }
    res.status(200).send("Logged out successfully");
  });
});

module.exports = router;
